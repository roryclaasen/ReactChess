@mixin grid($color, $alternate) {
	.cell {
		&.grid {
			&.white {
				background-color: $color;
				color: $alternate;
			}

			&.black {
				background-color: $alternate;
				color: $color;
			}
		}
	}
}

.chessboard {
	-moz-user-select: none;
	-ms-user-select: none;
	-webkit-touch-callout: none;
	-webkit-user-select: none;
	// border: $border;
	border-collapse: collapse;
	font-family: 'Noto Serif', serif;
	// margin: 1em;
	user-select: none;

	&.default { @include grid($color-grid, $color-grid-alternate); }
	&.brown { @include grid($color-grid-brown, $color-grid-brown-alternate); }
	&.gray { @include grid($color-grid-gray, $color-grid-gray-alternate); }

	.cell {
		cursor: default;
		height: $cell-size;
		line-height: $cell-size;
		text-align: center;
		width: $cell-size;

		&.label { font-weight: bold; }

		&.grid {
			padding: 0;
		}

		.piece {
			cursor: move;

			height: $cell-size;
			width: $cell-size;

			&.pawn {
				height: $cell-size * .8;
				width: $cell-size * .8;
			}

			img {
				left: 50%;
				margin: 0;
				position: absolute;
				top: 50%;
				transform: translate(-50%, -50%);
			}
		}

		.square {
			height: 100%;
			position: relative;
			width: 100%;

			.available {
				height: 100%;
				left: 0;
				opacity: .5;
				position: absolute;
				top: 0;
				width: 100%;
				z-index: 1;

				&.unplaceable { background-color: $color-unplaceable; }
				&.place { background-color: $color-place; }
				&.placeable { background-color: $color-placeable; }
			}
		}
	}

	.row {
		&:not(:first-child):not(:last-child) {
			.cell {
				&:first-child { border-right: $border; }
				&:last-child { border-left: $border; }
			}
		}

		&:first-child {
			.cell:not(:first-child):not(:last-child) {
				border-bottom: $border;
			}
		}

		&:last-child {
			.cell:not(:first-child):not(:last-child) {
				border-top: $border;
			}
		}
	}
}
